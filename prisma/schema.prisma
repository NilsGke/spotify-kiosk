// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url          = env("POSTGRES_PRISMA_URL")
    directUrl    = env("DIRECT_URL")
    relationMode = "prisma"
}

model SpotifySession {
    id String @id @default(cuid())

    name String

    code     String @unique
    password String

    adminId String
    admin   User   @relation(fields: [adminId], references: [id])

    market Market

    permission_playPause       Boolean @default(false)
    permission_skip            Boolean @default(false)
    permission_addToQueue      Boolean @default(false)
    permission_skipQueue       Boolean @default(false)
    permission_requireLoggedIn Boolean @default(false)

    createdAt DateTime @default(now())

    Log Log[]

    @@index([adminId, code])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id             String           @id @default(cuid())
    name           String?
    email          String?          @unique
    emailVerified  DateTime?
    image          String?
    accounts       Account[]
    sessions       Session[]
    SpotifySession SpotifySession[]
    Log            Log[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Log {
    id                Int            @id @default(autoincrement())
    type              LogType
    sessionId         String
    session           SpotifySession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
    triggeredByUserId String?
    triggeredBy       User?          @relation(fields: [triggeredByUserId], references: [id], onDelete: Cascade)
    triggeredAt       DateTime       @default(now())
    trackIds          String[]

    @@index([sessionId])
    @@index([triggeredByUserId])
}

enum LogType {
    AddToQueue
    Skip
}

enum Market {
    AD
    AE
    AG
    AL
    AM
    AO
    AR
    AT
    AU
    AZ
    BA
    BB
    BD
    BE
    BF
    BG
    BH
    BI
    BJ
    BN
    BO
    BR
    BS
    BT
    BW
    BY
    BZ
    CA
    CD
    CG
    CH
    CI
    CL
    CM
    CO
    CR
    CV
    CW
    CY
    CZ
    DE
    DJ
    DK
    DM
    DO
    DZ
    EC
    EE
    EG
    ES
    ET
    FI
    FJ
    FM
    FR
    GA
    GB
    GD
    GE
    GH
    GM
    GN
    GQ
    GR
    GT
    GW
    GY
    HK
    HN
    HR
    HT
    HU
    ID
    IE
    IL
    IN
    IQ
    IS
    IT
    JM
    JO
    JP
    KE
    KG
    KH
    KI
    KM
    KN
    KR
    KW
    KZ
    LA
    LB
    LC
    LI
    LK
    LR
    LS
    LT
    LU
    LV
    LY
    MA
    MC
    MD
    ME
    MG
    MH
    MK
    ML
    MN
    MO
    MR
    MT
    MU
    MV
    MW
    MX
    MY
    MZ
    NA
    NE
    NG
    NI
    NL
    NO
    NP
    NR
    NZ
    OM
    PA
    PE
    PG
    PH
    PK
    PL
    PS
    PT
    PW
    PY
    QA
    RO
    RS
    RW
    SA
    SB
    SC
    SE
    SG
    SI
    SK
    SL
    SM
    SN
    SR
    ST
    SV
    SZ
    TD
    TG
    TH
    TJ
    TL
    TN
    TO
    TR
    TT
    TV
    TW
    TZ
    UA
    UG
    US
    UY
    UZ
    VC
    VE
    VN
    VU
    WS
    XK
    ZA
    ZM
    ZW
}
